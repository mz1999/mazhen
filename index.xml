<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>mazhen.tech</title>
        <link>https://mazhen.tech/</link>
        <description>Linux,networking,Rust</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>me@mazhen.tech (mazhen)</managingEditor>
            <webMaster>me@mazhen.tech (mazhen)</webMaster><lastBuildDate>Sun, 16 Dec 2018 22:03:21 &#43;0800</lastBuildDate>
            <atom:link href="https://mazhen.tech/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>容器技术创新漫谈</title>
    <link>https://mazhen.tech/container-innovation/</link>
    <pubDate>Sun, 16 Dec 2018 22:03:21 &#43;0800</pubDate>
    <author>mazhen</author>
    <guid>https://mazhen.tech/container-innovation/</guid>
    <description><![CDATA[Kubernetes在2017年赢得了容器编排之战，使得基于容器+Kubernetes来构建PaaS平台成为了云计算的主流方式。在人们把关注]]></description>
</item>
<item>
    <title>Docker跨主机通信路由模式动手实验</title>
    <link>https://mazhen.tech/docker-route-networks/</link>
    <pubDate>Sun, 11 Nov 2018 22:00:22 &#43;0800</pubDate>
    <author>mazhen</author>
    <guid>https://mazhen.tech/docker-route-networks/</guid>
    <description><![CDATA[容器的跨主机通信主要有两种方式：封包模式和路由模式。上一篇文章演示了使用VXLAN协议的封包模式，这篇将介绍另一种方式，利用三层网络的路由转]]></description>
</item>
<item>
    <title>Docker跨主机Overlay网络动手实验</title>
    <link>https://mazhen.tech/docker-overlay-networks/</link>
    <pubDate>Wed, 07 Nov 2018 21:52:36 &#43;0800</pubDate>
    <author>mazhen</author>
    <guid>https://mazhen.tech/docker-overlay-networks/</guid>
    <description><![CDATA[上一篇文章我演示了docker bridge网络模型的实验，这次我将展示如何利用Overlay 网络实现跨主机容器的通信。 两个容器docker1]]></description>
</item>
<item>
    <title>Docker单机网络模型动手实验</title>
    <link>https://mazhen.tech/docker-network-bridge/</link>
    <pubDate>Fri, 26 Oct 2018 21:40:03 &#43;0800</pubDate>
    <author>mazhen</author>
    <guid>https://mazhen.tech/docker-network-bridge/</guid>
    <description><![CDATA[容器的本质 容器的本质就是一个进程，只不过对它进行了Linux Namesapce隔离，让它看不到外面的世界，用Cgroups限制了它能使用的资]]></description>
</item>
<item>
    <title>关系数据库查询处理基础知识扫盲</title>
    <link>https://mazhen.tech/rdbms-fundamental/</link>
    <pubDate>Sun, 01 Jul 2018 17:04:31 &#43;0800</pubDate>
    <author>mazhen</author>
    <guid>https://mazhen.tech/rdbms-fundamental/</guid>
    <description><![CDATA[当TiDB 源码阅读系列更新到第六篇《Select 语句概览》时，我发现需要一些关系数据库的基础知识才能更好的理解，例如逻辑查询计划优化其实就是]]></description>
</item>
<item>
    <title>关于MySQL XA事务的隔离级别</title>
    <link>https://mazhen.tech/mysql-xa/</link>
    <pubDate>Tue, 05 Jun 2018 14:44:59 &#43;0800</pubDate>
    <author>mazhen</author>
    <guid>https://mazhen.tech/mysql-xa/</guid>
    <description><![CDATA[为什么XA事务建议用SERIALIZABLE隔离级别 在MySQL最新的官方文档中，关于XA Transactions的介绍有这么一段描述： As with]]></description>
</item>
<item>
    <title>从RadonDB看新型数据库中间件的特性</title>
    <link>https://mazhen.tech/radondb/</link>
    <pubDate>Sun, 03 Jun 2018 14:43:12 &#43;0800</pubDate>
    <author>mazhen</author>
    <guid>https://mazhen.tech/radondb/</guid>
    <description><![CDATA[现在新出现的MySQL中间件除了基本的数据sharding功能，都增加了很多高级特性，我觉得有三个特性比较重要： 分布式事务的支持 数据的强一致]]></description>
</item>
<item>
    <title>TiDB Insert 执行流程图</title>
    <link>https://mazhen.tech/insert-overview/</link>
    <pubDate>Tue, 15 May 2018 14:38:05 &#43;0800</pubDate>
    <author>mazhen</author>
    <guid>https://mazhen.tech/insert-overview/</guid>
    <description><![CDATA[TiDB源码解读系列的《Insert语句概览》讲解了Insert执行的整体流程，并在最后用一幅图描述了整个流程： 我按照自己的理解对这幅图扩展]]></description>
</item>
<item>
    <title>Cursor功能实现总结</title>
    <link>https://mazhen.tech/cursor-summary/</link>
    <pubDate>Fri, 11 May 2018 17:01:04 &#43;0800</pubDate>
    <author>mazhen</author>
    <guid>https://mazhen.tech/cursor-summary/</guid>
    <description><![CDATA[alt : Cursor功能实现总结.pdf]]></description>
</item>
<item>
    <title>TiDB SQL Parser 的实现</title>
    <link>https://mazhen.tech/sql-parser/</link>
    <pubDate>Wed, 09 May 2018 14:34:58 &#43;0800</pubDate>
    <author>mazhen</author>
    <guid>https://mazhen.tech/sql-parser/</guid>
    <description><![CDATA[PingCAP发布了TiDB的源码阅读系列文章，让我们可以比较系统的去学习了解TiDB的内部实现。最近的一篇《SQL 的一生》，从整体上讲解了]]></description>
</item>
</channel>
</rss>
